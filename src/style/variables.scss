$lightColors: (
    red: rgb(255,59,48),
    orange: rgb(255,149,0),
    yellow: rgb(255,204,0),
    green: rgb(52,199,89),
    teal: rgb(90,200,250),
    blue: rgb(0,122,255),
    indigo: rgb(88,86,214),
    purple: rgb(175,82,222),
    pink: rgb(255,45,85),
    grey0: rgb(0,0,0),
    grey1: rgb(142,142,147),
    grey2: rgb(174,174,178),
    grey3: rgb(199,199,204),
    grey4: rgb(209,209,214),
    grey5: rgb(229,229,234),
    grey6: rgb(242,242,247)
);

$darkColors: (
    red: rgb(255,69,58),
    orange: rgb(255,159,10),
    yellow: rgb(255,214,10),
    green: rgb(48,209,88),
    teal: rgb(100,210,255),
    blue: rgb(10,132,255),
    indigo: rgb(94,92,230),
    purple: rgb(191,90,242),
    pink: rgb(255,55,95),
    grey0: rgb(255,255,255),
    grey1: rgb(152,152,157),
    grey2: rgb(99,99,102),
    grey3: rgb(72,72,74),
    grey4: rgb(58,58,60),
    grey5: rgb(44,44,46),
    grey6: rgb(28,28,30)
);

@mixin mapToColorVars($colorMap) {
    @each $key, $color in $colorMap {
        --#{$key}: #{$color};
        @for $i from 1 through 9 {
            --#{$key}-transparency-#{$i}: #{rgba($color,1 - ($i/10))};
        }
    }
}

@function color($name, $transparency: 0){
    @if(map-has-key($darkColors, $name) and map-has-key($lightColors, $name)){
        @if($transparency > 0){
            @return var(#{'--'+$name+"-transparency-"+$transparency});
        } @else {
            @return var(#{'--'+$name});
        }
    }

    @error("Invalid Color");
}